/*
class Item {
    int value, weight;
    Item(int x, int y){
        this.value = x;
        this.weight = y;
    }
}
*/

class Solution
{
    //Function to get the maximum total value in the knapsack.
    double fractionalKnapsack(int W, Item arr[], int n) 
    {
        Arrays.sort(arr,(item1,item2)->{
            double u1=(double) item1.value/item1.weight;
            double u2=(double) item2.value/item2.weight;
            if(u1>u2) return -1;
            else if(u1<u2) return 1;
            return 0;
        });
        double max=0.0;
        int curr=0;
        while(W>0 && curr<n){
            int min=Math.min(W,arr[curr].weight);
            W-=min;
            max+=min*((double) arr[curr].value/ arr[curr].weight);
            curr++;
        }
        return max;
    }
}
